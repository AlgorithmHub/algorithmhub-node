/**
 * AlgorithmHub
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.algorithmhub);
  }
}(this, function(expect, algorithmhub) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new algorithmhub.ModelApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ModelApi', function() {
    describe('createModel', function() {
      it('should call createModel successfully', function(done) {
        //uncomment below and update the code to test createModel
        //instance.createModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createModel_0', function() {
      it('should call createModel_0 successfully', function(done) {
        //uncomment below and update the code to test createModel_0
        //instance.createModel_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteModel', function() {
      it('should call deleteModel successfully', function(done) {
        //uncomment below and update the code to test deleteModel
        //instance.deleteModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteModelTrain', function() {
      it('should call deleteModelTrain successfully', function(done) {
        //uncomment below and update the code to test deleteModelTrain
        //instance.deleteModelTrain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteModel_0', function() {
      it('should call deleteModel_0 successfully', function(done) {
        //uncomment below and update the code to test deleteModel_0
        //instance.deleteModel_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('detailModel', function() {
      it('should call detailModel successfully', function(done) {
        //uncomment below and update the code to test detailModel
        //instance.detailModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('detailModel_0', function() {
      it('should call detailModel_0 successfully', function(done) {
        //uncomment below and update the code to test detailModel_0
        //instance.detailModel_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editModel', function() {
      it('should call editModel successfully', function(done) {
        //uncomment below and update the code to test editModel
        //instance.editModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editModelTrain', function() {
      it('should call editModelTrain successfully', function(done) {
        //uncomment below and update the code to test editModelTrain
        //instance.editModelTrain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editModel_0', function() {
      it('should call editModel_0 successfully', function(done) {
        //uncomment below and update the code to test editModel_0
        //instance.editModel_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fitModelTrain', function() {
      it('should call fitModelTrain successfully', function(done) {
        //uncomment below and update the code to test fitModelTrain
        //instance.fitModelTrain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listModelTrain', function() {
      it('should call listModelTrain successfully', function(done) {
        //uncomment below and update the code to test listModelTrain
        //instance.listModelTrain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listModels', function() {
      it('should call listModels successfully', function(done) {
        //uncomment below and update the code to test listModels
        //instance.listModels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listModels_0', function() {
      it('should call listModels_0 successfully', function(done) {
        //uncomment below and update the code to test listModels_0
        //instance.listModels_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runModel', function() {
      it('should call runModel successfully', function(done) {
        //uncomment below and update the code to test runModel
        //instance.runModel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runModelTrain', function() {
      it('should call runModelTrain successfully', function(done) {
        //uncomment below and update the code to test runModelTrain
        //instance.runModelTrain(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runModel_0', function() {
      it('should call runModel_0 successfully', function(done) {
        //uncomment below and update the code to test runModel_0
        //instance.runModel_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
